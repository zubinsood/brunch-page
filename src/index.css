* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  transition: background-color 0.3s ease, color 0.3s ease;
}

:root {
  --primary-bg: #F7F2F2;
  --primary-color: #DC7890;
}

[data-theme='dark'] {
  --primary-bg: #2B2B2B;
  --primary-color: #CFECC4;
}

body {
  background-color: black; /* Fallback color */
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

.navbar {
  width: 393px;
  height: 60px;
  flex-shrink: 0;
  background: var(--primary-bg);
  display: flex;
  justify-content: space-between;
}

@import url('https://fonts.googleapis.com/css2?family=Asap+Condensed&display=swap');

.navbar-left {
  display: flex;
  width: 177px;
  height: 37px;
  flex-direction: column;
  justify-content: flex-end;
  flex-shrink: 0;
  color: var(--primary-color);
  font-feature-settings: 'clig' off, 'liga' off;
  font-family: Asap Condensed;
  font-size: 32px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
  letter-spacing: 12px;
  margin: 14px 12px 9px;
}

.navbar-right {
  margin: 18px 16px 12px;
}

.sun-icon {
  width: 15.524px;
  height: 15.538px;
  flex-shrink: 0;
}

.moon-icon {
  width: 13.897px;
  height: 13.966px;
  flex-shrink: 0;
}

.switch {
  width: 64px;
  height: 30px;
  flex-shrink: 0;
  position: relative;
  display: inline-block;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}


/* New/Updated styles */
.slider g {
  transition: transform 0.3s ease; /* Animation effect */
}

/* Position when unchecked (Light mode) */
.switch input:not(:checked) + .slider g {
  transform: translateX(35px);
}

/* Position when checked (Dark mode) */
.switch input:checked + .slider g {
  transform: translateX(0px); /* Adjust this value based on the desired sliding distance */
}


